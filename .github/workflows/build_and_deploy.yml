name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_publish_images:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install git-restore-mtime
        run: sudo apt-get update && sudo apt-get install git-restore-mtime -y
      - name: Restore mtime
        run: git restore-mtime

      - uses: actions/cache@v2
        env:
          cache-version: v1
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ env.cache-version }}-${{ github.ref }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            - ${{ runner.os }}-cargo-${{ env.cache-version }}-${{ github.ref }}-
            - ${{ runner.os }}-cargo-${{ env.cache-version }}-

      - name: Build binary
        env:
          CARGO_INCREMENTAL: 1
        run: cargo build --release

      - name: Upload binary
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: ./target/release/no-free-lunch

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_publish_images
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2

      - name: Write environments into .env
        run: |
          ENV_FILE=./attachments/.env
          echo "DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }}" > $ENV_FILE
          echo "APPLICATION_ID=${{ secrets.APPLICATION_ID }}" >> $ENV_FILE
      - name: Write a path into systemd unit file
        run: |
          UNIT_FILE=./attachments/run-no-free-lunch.service
          sed -i "s/ExecStart=/ExecStart=${{ secrets.SERVER_SSH_PATH }}\/restart-bot.sh/" $UNIT_FILE
          sed -i "s/WorkingDirectory=/WorkingDirectory=${{ secrets.SERVER_SSH_PATH }}/" $UNIT_FILE

      - name: Download binary
        uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: ./attachments
      - name: Install SSH Key
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Rsync files
        run: rsync -auvz --delete -e "ssh -p ${{ secrets.SERVER_SSH_PORT }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" ./attachments/ ${{ secrets.SERVER_SSH_USER }}@${{ secrets.SERVER_SSH_ADDRESS }}:${{ secrets.SERVER_SSH_PATH }}
      - name: Restart bot
        run: ssh -p ${{ secrets.SERVER_SSH_PORT }} -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SERVER_SSH_USER }}@${{ secrets.SERVER_SSH_ADDRESS }} "cd ${{ secrets.SERVER_SSH_PATH }};chmod +x prepare-bot.sh;./prepare-bot.sh"
